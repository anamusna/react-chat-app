{"ast":null,"code":"import _toConsumableArray from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/dci-pc-ubuntu49/Desktop/react-chat-app/src/components/Chat.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Chatkit from '@pusher/chatkit';\nimport Message from './Message';\nimport TypingIndicator from '..//components/TypingIndicator';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, props));\n    _this.state = {\n      messages: [],\n      currentRoom: {},\n      currentUser: {},\n      typingUsers: [],\n      chatInput: ''\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleKeyPress = _this._handleKeyPress.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendTypingEvent = _this.sendTypingEvent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"sendMessage\",\n    value: function sendMessage() {\n      if (this.state.chatInput) {\n        this.state.currentUser.sendMessage({\n          text: this.state.chatInput,\n          roomId: this.state.currentRoom.id\n        });\n      }\n\n      this.setState({\n        chatInput: ''\n      });\n    } // Send typing event\n\n  }, {\n    key: \"sendTypingEvent\",\n    value: function sendTypingEvent(event) {\n      this.state.currentUser.isTypingIn({\n        roomId: this.state.currentRoom.id\n      }).catch(function (error) {\n        return console.error('error', error);\n      });\n      this.setState({\n        chatInput: event.target.value\n      });\n    }\n  }, {\n    key: \"_handleKeyPress\",\n    value: function _handleKeyPress(e) {\n      if (e.key === 'Enter') {\n        this.sendMessage();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: 'v1:us1:eca4e254-458d-45d4-bf49-61c0a153911c',\n        userId: this.props.currentUsername,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/eca4e254-458d-45d4-bf49-61c0a153911c/token'\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this2.setState({\n          currentUser: currentUser\n        });\n\n        return currentUser.subscribeToRoom({\n          roomId: 19373665,\n          messageLimit: 2,\n          hooks: {\n            onMessage: function onMessage(message) {\n              var newmessage = _this2.state.messages;\n              newmessage.push(React.createElement(Message, {\n                key: _this2.state.messages.length,\n                senderId: message.senderId,\n                text: message.text,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 66\n                },\n                __self: this\n              }));\n\n              _this2.setState({\n                messages: newmessage\n              });\n            },\n            onUserStartedTyping: function onUserStartedTyping(user) {\n              _this2.setState({\n                typingUsers: _toConsumableArray(_this2.state.typingUsers).concat([user.name])\n              });\n            },\n            onUserStoppedTyping: function onUserStoppedTyping(user) {\n              _this2.setState({\n                typingUsers: _this2.state.typingUsers.filter(function (username) {\n                  return username !== user.name;\n                })\n              });\n            }\n          }\n        });\n      }).then(function (currentRoom) {\n        _this2.setState({\n          currentRoom: currentRoom\n        });\n      }).catch(function (error) {\n        return console.error('error', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chat-output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.messages), React.createElement(\"input\", {\n        id: \"chat-input\",\n        type: \"text\",\n        placeholder: \"Type message...\",\n        name: \"\",\n        value: this.state.chatInput,\n        onChange: this.sendTypingEvent,\n        onKeyPress: this._handleKeyPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"btndiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"button\",\n        type: \"button\",\n        onClick: this.sendMessage,\n        value: \"Send Chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(TypingIndicator, {\n        typingUsers: this.state.typingUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nexport default Chat;","map":{"version":3,"sources":["/home/dci-pc-ubuntu49/Desktop/react-chat-app/src/components/Chat.js"],"names":["React","Component","Chatkit","Message","TypingIndicator","Chat","props","state","messages","currentRoom","currentUser","typingUsers","chatInput","sendMessage","bind","_handleKeyPress","sendTypingEvent","text","roomId","id","setState","event","isTypingIn","catch","error","console","target","value","e","key","chatManager","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onMessage","message","newmessage","push","length","senderId","onUserStartedTyping","user","name","onUserStoppedTyping","filter","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Chatkit from '@pusher/chatkit';\nimport Message from './Message';\nimport TypingIndicator from '..//components/TypingIndicator';\n\nclass Chat extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages    : [],\n\t\t\tcurrentRoom : {},\n\t\t\tcurrentUser : {},\n\t\t\ttypingUsers : [],\n\t\t\tchatInput   : ''\n\t\t};\n\t\tthis.sendMessage = this.sendMessage.bind(this);\n\t\tthis._handleKeyPress = this._handleKeyPress.bind(this);\n\t\tthis.sendTypingEvent = this.sendTypingEvent.bind(this);\n\t}\n\tsendMessage() {\n\t\tif (this.state.chatInput) {\n\t\t\tthis.state.currentUser.sendMessage({\n\t\t\t\ttext   : this.state.chatInput,\n\t\t\t\troomId : this.state.currentRoom.id\n\t\t\t});\n\t\t}\n\t\tthis.setState({ chatInput: '' });\n\t}\n\n\t// Send typing event\n\tsendTypingEvent(event) {\n\t\tthis.state.currentUser\n\t\t\t.isTypingIn({ roomId: this.state.currentRoom.id })\n\t\t\t.catch((error) => console.error('error', error));\n\t\tthis.setState({\n\t\t\tchatInput : event.target.value\n\t\t});\n\t}\n\n\t_handleKeyPress(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\tthis.sendMessage();\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tconst chatManager = new Chatkit.ChatManager({\n\t\t\tinstanceLocator : 'v1:us1:eca4e254-458d-45d4-bf49-61c0a153911c',\n\t\t\tuserId          : this.props.currentUsername,\n\t\t\ttokenProvider   : new Chatkit.TokenProvider({\n\t\t\t\turl :\n\t\t\t\t\t'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/eca4e254-458d-45d4-bf49-61c0a153911c/token'\n\t\t\t})\n\t\t});\n\t\tchatManager\n\t\t\t.connect()\n\t\t\t.then((currentUser) => {\n\t\t\t\tthis.setState({ currentUser });\n\t\t\t\treturn currentUser.subscribeToRoom({\n\t\t\t\t\troomId       : 19373665,\n\t\t\t\t\tmessageLimit : 2,\n\t\t\t\t\thooks        : {\n\t\t\t\t\t\tonMessage           : (message) => {\n\t\t\t\t\t\t\tlet newmessage = this.state.messages;\n\t\t\t\t\t\t\tnewmessage.push(\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tkey={this.state.messages.length}\n\t\t\t\t\t\t\t\t\tsenderId={message.senderId}\n\t\t\t\t\t\t\t\t\ttext={message.text}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tthis.setState({ messages: newmessage });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonUserStartedTyping : (user) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\ttypingUsers : [ ...this.state.typingUsers, user.name ]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonUserStoppedTyping : (user) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\ttypingUsers : this.state.typingUsers.filter((username) => username !== user.name)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((currentRoom) => {\n\t\t\t\tthis.setState({ currentRoom });\n\t\t\t})\n\t\t\t.catch((error) => console.error('error', error));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"center\">\n\t\t\t\t<div id=\"chat-output\">{this.state.messages}</div>\n\t\t\t\t<input\n\t\t\t\t\tid=\"chat-input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Type message...\"\n\t\t\t\t\tname=\"\"\n\t\t\t\t\tvalue={this.state.chatInput}\n\t\t\t\t\tonChange={this.sendTypingEvent}\n\t\t\t\t\tonKeyPress={this._handleKeyPress}\n\t\t\t\t/>\n\t\t\t\t<div id=\"btndiv\">\n\t\t\t\t\t<input id=\"button\" type=\"button\" onClick={this.sendMessage} value=\"Send Chat\" />\n\t\t\t\t\t<TypingIndicator typingUsers={this.state.typingUsers} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}